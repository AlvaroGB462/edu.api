# Nombre de la aplicación, se utilizará en varios lugares como en logs y contexto de la aplicación
spring.application.name=api

# URL de conexión a la base de datos PostgreSQL
# Asegúrate de que el puerto y la base de datos sean correctos y de que la base de datos esté en ejecución
spring.datasource.url=jdbc:postgresql://localhost:2004/muc_db

# Nombre de usuario para conectarse a la base de datos
spring.datasource.username=postgres

# Contraseña para el usuario de la base de datos
spring.datasource.password=ldts123$%

# Clase del controlador de la base de datos PostgreSQL
# Esto es necesario para que Spring Boot sepa cómo manejar las conexiones a PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de Hibernate para manejar la creación y actualización del esquema de la base de datos
# 'update' permite que Hibernate ajuste el esquema de la base de datos a las entidades existentes
spring.jpa.hibernate.ddl-auto=update

# Configuración para mostrar las sentencias SQL generadas por Hibernate en la consola
# Esto es útil para depurar y entender qué consultas se están ejecutando
spring.jpa.show-sql=true

# Formato de las sentencias SQL que se muestran en la consola
# Permite una visualización más legible de las consultas SQL
spring.jpa.properties.hibernate.format_sql=true

# Puerto en el que la aplicación escuchará las solicitudes
# Puedes cambiar esto si el puerto 8085 ya está en uso o si prefieres otro puerto
server.port=8085